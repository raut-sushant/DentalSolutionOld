package com.ekdant.dentalsolution.view;
import com.ekdant.dentalsolution.dao.CityDao;
import com.ekdant.dentalsolution.dao.DoctorDao;
import com.ekdant.dentalsolution.domain.CityBean;
import com.ekdant.dentalsolution.domain.DoctorBean;
import com.ekdant.dentalsolution.masters.Cities;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.*;
import com.ekdant.dentalsolution.principal.Doctors;
import java.awt.Dimension;
import java.awt.HeadlessException;
import java.awt.Toolkit;
/**
 *
 * @author Sushant
 */
public class ViewDoctor extends javax.swing.JFrame {
    DoctorDao doctorDao;
    Doctors doctorFrm;
    CityDao cityDao;
    DateFormat displayDateFormat = new SimpleDateFormat("d MMM yyyy");
    DateFormat databaseDateFormat = new SimpleDateFormat("yyyy-MM-dd");
    DateFormat inputDateFormat = new SimpleDateFormat("d MMM, yyyy");    
    private boolean newCityAdded;
    
    /** Creates new form JF_AlterDoctor
     * @param doctorFrm 
     * @param doctor 
     */
    public ViewDoctor(Doctors doctorFrm, DoctorBean doctor) {
        this.doctorFrm = doctorFrm;
        initComponents();
        cityDao = new CityDao();
        cityDao.getCities(cityCB);
        doctorDao = new DoctorDao();
        birthdayDC.setDate(doctor.getBirthDate());
        doctorIdTxt.setText(doctor.getDoctorId()+"");
        nameTxt.setText(doctor.getName());
        degreeTxt.setText(doctor.getDegree());
        regNoTxt.setText(doctor.getRegistrationNo());
        specializationTxt.setText(doctor.getSpecialization());
        typeCB.setSelectedItem(doctor.getType());
        genderCB.setSelectedItem(doctor.getGender());
        addressTxt.setText(doctor.getAddress());
        cityCB.setSelectedItem(doctor.getCity());
        mobileTxt.setText(doctor.getTelephone());
        emailTxt.setText(doctor.getEmail());
        ageTxt.setText(doctor.getAge()+"");       
        newCityAdded = false;
    }
   
   
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane = new javax.swing.JTabbedPane();
        doctorDetailsPanel = new javax.swing.JPanel();
        nameLbl = new javax.swing.JLabel();
        addressTxt = new javax.swing.JTextField();
        casePaperLbl = new javax.swing.JLabel();
        birthDayLbl = new javax.swing.JLabel();
        genderLbl = new javax.swing.JLabel();
        genderCB = new javax.swing.JComboBox();
        addressLbl = new javax.swing.JLabel();
        nameTxt = new javax.swing.JTextField();
        cityLbl = new javax.swing.JLabel();
        mobileLbl = new javax.swing.JLabel();
        emailLbl = new javax.swing.JLabel();
        emailTxt = new javax.swing.JTextField();
        mobileTxt = new javax.swing.JTextField();
        doctorIdTxt = new javax.swing.JTextField();
        cityCB = new javax.swing.JComboBox();
        ageLbl = new javax.swing.JLabel();
        ageTxt = new javax.swing.JTextField();
        typeCB = new javax.swing.JComboBox();
        addCityBtn = new javax.swing.JButton();
        regNoLbl = new javax.swing.JLabel();
        regNoTxt = new javax.swing.JTextField();
        degreelbl = new javax.swing.JLabel();
        degreeTxt = new javax.swing.JTextField();
        specializationLbl = new javax.swing.JLabel();
        specializationTxt = new javax.swing.JTextField();
        birthdayDC = new com.toedter.calendar.JDateChooser();
        saveBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("View Patients");
        setName("Patients"); // NOI18N
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jTabbedPane.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N

        doctorDetailsPanel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        doctorDetailsPanel.setPreferredSize(new java.awt.Dimension(806, 550));

        nameLbl.setBackground(new java.awt.Color(51, 51, 255));
        nameLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        nameLbl.setForeground(new java.awt.Color(51, 51, 255));
        nameLbl.setText("* Name:");

        addressTxt.setEnabled(false);
        addressTxt.setNextFocusableComponent(cityCB);
        addressTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addressTxtActionPerformed(evt);
            }
        });

        casePaperLbl.setBackground(new java.awt.Color(51, 51, 255));
        casePaperLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        casePaperLbl.setForeground(new java.awt.Color(51, 51, 255));
        casePaperLbl.setText("Type");

        birthDayLbl.setBackground(new java.awt.Color(51, 51, 255));
        birthDayLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        birthDayLbl.setForeground(new java.awt.Color(51, 51, 255));
        birthDayLbl.setText("Date of birth:");

        genderLbl.setBackground(new java.awt.Color(51, 51, 255));
        genderLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        genderLbl.setForeground(new java.awt.Color(51, 51, 255));
        genderLbl.setText(" Gender:");

        genderCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Male", "Female" }));
        genderCB.setEnabled(false);
        genderCB.setNextFocusableComponent(addressTxt);

        addressLbl.setBackground(new java.awt.Color(51, 51, 255));
        addressLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        addressLbl.setForeground(new java.awt.Color(51, 51, 255));
        addressLbl.setText("Address:");

        nameTxt.setEnabled(false);
        nameTxt.setNextFocusableComponent(ageTxt);

        cityLbl.setBackground(new java.awt.Color(51, 51, 255));
        cityLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        cityLbl.setForeground(new java.awt.Color(51, 51, 255));
        cityLbl.setText("City:");

        mobileLbl.setBackground(new java.awt.Color(51, 51, 255));
        mobileLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mobileLbl.setForeground(new java.awt.Color(51, 51, 255));
        mobileLbl.setText("Mobile:");

        emailLbl.setBackground(new java.awt.Color(51, 51, 255));
        emailLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emailLbl.setForeground(new java.awt.Color(51, 51, 255));
        emailLbl.setText("Email:");

        emailTxt.setEnabled(false);
        emailTxt.setNextFocusableComponent(saveBtn);

        mobileTxt.setEnabled(false);
        mobileTxt.setNextFocusableComponent(emailTxt);

        doctorIdTxt.setEditable(false);
        doctorIdTxt.setMinimumSize(new java.awt.Dimension(0, 0));
        doctorIdTxt.setPreferredSize(new java.awt.Dimension(0, 0));

        cityCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select" }));
        cityCB.setEnabled(false);
        cityCB.setNextFocusableComponent(mobileTxt);
        cityCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cityCBItemStateChanged(evt);
            }
        });

        ageLbl.setBackground(new java.awt.Color(51, 51, 255));
        ageLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        ageLbl.setForeground(new java.awt.Color(51, 51, 255));
        ageLbl.setText("* Age:");

        ageTxt.setEnabled(false);
        ageTxt.setNextFocusableComponent(regNoTxt);
        ageTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ageTxtFocusLost(evt);
            }
        });
        ageTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ageTxtActionPerformed(evt);
            }
        });

        typeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Main", "Consulting" }));
        typeCB.setEnabled(false);

        addCityBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EkDant/icones/plus-icon.png"))); // NOI18N
        addCityBtn.setEnabled(false);
        addCityBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCityBtnActionPerformed(evt);
            }
        });

        regNoLbl.setBackground(new java.awt.Color(51, 51, 255));
        regNoLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        regNoLbl.setForeground(new java.awt.Color(51, 51, 255));
        regNoLbl.setText("* Reg No:");

        regNoTxt.setEnabled(false);
        regNoTxt.setNextFocusableComponent(degreeTxt);

        degreelbl.setBackground(new java.awt.Color(51, 51, 255));
        degreelbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        degreelbl.setForeground(new java.awt.Color(51, 51, 255));
        degreelbl.setText(" Degree:");

        degreeTxt.setEnabled(false);
        degreeTxt.setNextFocusableComponent(specializationTxt);

        specializationLbl.setBackground(new java.awt.Color(51, 51, 255));
        specializationLbl.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        specializationLbl.setForeground(new java.awt.Color(51, 51, 255));
        specializationLbl.setText(" Specialization:");

        specializationTxt.setEnabled(false);
        specializationTxt.setNextFocusableComponent(genderCB);

        javax.swing.GroupLayout doctorDetailsPanelLayout = new javax.swing.GroupLayout(doctorDetailsPanel);
        doctorDetailsPanel.setLayout(doctorDetailsPanelLayout);
        doctorDetailsPanelLayout.setHorizontalGroup(
            doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addressLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cityLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(mobileLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(emailLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(doctorIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(cityCB, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(addCityBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(mobileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(ageLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(ageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(genderLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(birthDayLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(birthdayDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(regNoLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(regNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(degreelbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(degreeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(specializationLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(specializationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addComponent(casePaperLbl, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(typeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        doctorDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {ageLbl, casePaperLbl, degreelbl, genderLbl, nameLbl, regNoLbl, specializationLbl});

        doctorDetailsPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {addressTxt, degreeTxt, emailTxt, mobileTxt, nameTxt, regNoTxt, specializationTxt});

        doctorDetailsPanelLayout.setVerticalGroup(
            doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, doctorDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(doctorIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nameLbl)
                            .addComponent(nameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLbl)
                            .addComponent(ageTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLbl)
                            .addComponent(genderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(regNoLbl)
                            .addComponent(regNoTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(degreelbl)
                            .addComponent(degreeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(specializationLbl)
                            .addComponent(specializationTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(doctorDetailsPanelLayout.createSequentialGroup()
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(typeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(casePaperLbl))
                            .addComponent(birthDayLbl))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addressLbl)
                            .addComponent(addressTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addCityBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cityLbl)
                                .addComponent(cityCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mobileLbl)
                            .addComponent(mobileTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(doctorDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailLbl)
                            .addComponent(emailTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(birthdayDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        doctorDetailsPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {addCityBtn, addressLbl, addressTxt, ageLbl, ageTxt, birthDayLbl, casePaperLbl, cityCB, cityLbl, degreeTxt, degreelbl, emailLbl, emailTxt, genderCB, genderLbl, mobileLbl, mobileTxt, nameLbl, nameTxt, regNoLbl, regNoTxt, specializationLbl, specializationTxt, typeCB});

        jTabbedPane.addTab("Doctor Details", new javax.swing.ImageIcon(getClass().getResource("/EkDant/icones/Patient Boy 1.png")), doctorDetailsPanel); // NOI18N

        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EkDant/icones/Patient Boy 1 Check.png"))); // NOI18N
        saveBtn.setMnemonic('U');
        saveBtn.setText("Update");
        saveBtn.setEnabled(false);
        saveBtn.setNextFocusableComponent(cancelBtn);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EkDant/icones/Patient Boy 1 Stop.png"))); // NOI18N
        cancelBtn.setMnemonic('C');
        cancelBtn.setText("Cancel");
        cancelBtn.setToolTipText("");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/EkDant/icones/Patient Boy 1 Edit 1.png"))); // NOI18N
        editBtn.setMnemonic('E');
        editBtn.setText("Edit");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jTabbedPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelBtn)
                    .addComponent(saveBtn)
                    .addComponent(editBtn))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed

        String name = nameTxt.getText();
        String city = cityCB.getSelectedItem().toString().equalsIgnoreCase("select") ? "" : cityCB.getSelectedItem().toString();
        String age = ageTxt.getText();

        if (name.length() < 3) {
            JOptionPane.showMessageDialog(null, "Please enter Doctors name!", "Attention", JOptionPane.WARNING_MESSAGE);
        } else if (age.length() < 1) {
            JOptionPane.showMessageDialog(null, "Please enter age!", "Attention", JOptionPane.WARNING_MESSAGE);
        } else {

            DoctorBean doctor = new DoctorBean();
            doctor.setDoctorId(Integer.parseInt(doctorIdTxt.getText()));
            doctor.setName(name);
            doctor.setDegree(degreeTxt.getText());
            doctor.setRegistrationNo(regNoTxt.getText());
            doctor.setSpecialization(specializationTxt.getText());
            doctor.setBirthDate(birthdayDC.getDate());
            doctor.setGender(genderCB.getSelectedItem().toString());
            doctor.setAge(Integer.parseInt(age));
            doctor.setTelephone(mobileTxt.getText());
            doctor.setMobile("");
            doctor.setCity(city);
            doctor.setAddress(addressTxt.getText());
            doctor.setEmail(emailTxt.getText());
            doctor.setType("Coulsuntant");

            if (doctorDao.updateDoctor(doctor)) {
                JOptionPane.showMessageDialog(null, "Doctor successfully changed!", "Joined!", JOptionPane.INFORMATION_MESSAGE);
            }

            insertNewCity(city);
            this.dispose();
            doctorFrm.dispose();
            new Doctors().setVisible(true);
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void insertNewCity(String city){
        if(cityDao.cityNotPresent(city)){
            CityBean newCity = new CityBean();
            newCity.setName(city);
            cityDao.addCity(newCity);
        }
    }
    
    private void populateNewCity(){
        cityDao.getCities(cityCB);
        if(newCityAdded){
            String newlyAddedCity = cityDao.fetchLatestCity();
            cityCB.setSelectedItem(newlyAddedCity);
        }
    }
    
    private void validateAge() throws HeadlessException {
        String ageStr = ageTxt.getText();
        if (!ageStr.isEmpty()) {
            int age = 0;
            try {
                age = Integer.parseInt(ageTxt.getText());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Please enter valid age!", "Attention", JOptionPane.WARNING_MESSAGE);
                ageTxt.requestFocus();
            }
        }
        else{
            JOptionPane.showMessageDialog(null, "Please enter age!", "Attention", JOptionPane.WARNING_MESSAGE);
            ageTxt.requestFocus();
        }
    }
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        nameTxt.setEnabled(true);
        degreeTxt.setEnabled(true);
        regNoTxt.setEnabled(true);
        specializationTxt.setEnabled(true);
        genderCB.setEnabled(true);
        ageTxt.setEnabled(true);
        birthdayDC.setEnabled(true);
        addressTxt.setEnabled(true);
        cityCB.setEnabled(true);
        mobileTxt.setEnabled(true);
        emailTxt.setEnabled(true);
        saveBtn.setEnabled(true);
        addCityBtn.setEnabled(true);        
    }//GEN-LAST:event_editBtnActionPerformed

    private void ageTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ageTxtActionPerformed
        validateAge();
    }//GEN-LAST:event_ageTxtActionPerformed

    private void cityCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cityCBItemStateChanged
        
    }//GEN-LAST:event_cityCBItemStateChanged

    private void addCityBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCityBtnActionPerformed
        newCityAdded = true;
        new Cities(true).setVisible(true);
    }//GEN-LAST:event_addCityBtnActionPerformed

    private void addressTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addressTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addressTxtActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        populateNewCity();
    }//GEN-LAST:event_formWindowGainedFocus

    private void ageTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ageTxtFocusLost
        validateAge();
    }//GEN-LAST:event_ageTxtFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCityBtn;
    private javax.swing.JLabel addressLbl;
    private javax.swing.JTextField addressTxt;
    private javax.swing.JLabel ageLbl;
    private javax.swing.JTextField ageTxt;
    private javax.swing.JLabel birthDayLbl;
    private com.toedter.calendar.JDateChooser birthdayDC;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JLabel casePaperLbl;
    private javax.swing.JComboBox cityCB;
    private javax.swing.JLabel cityLbl;
    private javax.swing.JTextField degreeTxt;
    private javax.swing.JLabel degreelbl;
    private javax.swing.JPanel doctorDetailsPanel;
    private javax.swing.JTextField doctorIdTxt;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel emailLbl;
    private javax.swing.JTextField emailTxt;
    private javax.swing.JComboBox genderCB;
    private javax.swing.JLabel genderLbl;
    private javax.swing.JTabbedPane jTabbedPane;
    private javax.swing.JLabel mobileLbl;
    private javax.swing.JTextField mobileTxt;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField nameTxt;
    private javax.swing.JLabel regNoLbl;
    private javax.swing.JTextField regNoTxt;
    private javax.swing.JButton saveBtn;
    private javax.swing.JLabel specializationLbl;
    private javax.swing.JTextField specializationTxt;
    private javax.swing.JComboBox typeCB;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JPanel panel;
}
